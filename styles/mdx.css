@import "@portaljs/remark-callouts/styles.css";
@reference './globals.css';

/* Trying to replicate prose-headings because the link tag styles take precedence */
.prose .anchor {
  font-weight: bold;
  color: hsl(var(--foreground));
  text-decoration: none;
  cursor: pointer;
}

/* INLINE CODE STYLE START */
span[data-rehype-pretty-code-figure] {
  display: inline;
  max-width: 100%;
  margin: 0;
  position: relative;
}

span[data-rehype-pretty-code-figure] code {
  padding: 0.1em 0.4em;
  margin: 0;
  border-radius: 4px;
  font-size: 0.85em;
  font-family: var(--font-mono);
  background-color: hsl(var(--syntax-bg));
  color: hsl(var(--foreground));
  display: inline;
  white-space: break-spaces;
  word-break: break-word;
  overflow-wrap: break-word;
  border: none;
  line-height: 1.7;
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}

@media (max-width: 640px) {
  span[data-rehype-pretty-code-figure] code {
    font-size: 0.8em; /* Slightly smaller on mobile */
    padding: 0.05em 0.3em; /* Tighter padding on mobile */
  }
}

span[data-rehype-pretty-code-figure] code span[data-line] {
  word-break: break-word;
  overflow-wrap: break-word;
  white-space: break-spaces;
  background: transparent;
}

p span[data-rehype-pretty-code-figure],
li span[data-rehype-pretty-code-figure] {
  display: inline;
}

/* Dark mode styling */
.dark span[data-rehype-pretty-code-figure] code {
  background-color: hsl(var(--syntax-bg));
  color: hsl(var(--syntax-txt));
}

/* Add subtle border for better distinction in light mode */
.light span[data-rehype-pretty-code-figure] code {
  border: 1px solid hsl(var(--border));
}

/* Specific styling for the data-language="plaintext" */
span[data-rehype-pretty-code-figure] code[data-language="plaintext"] {
  font-family: var(--font-mono);
}
/* INLINE CODE STYLE END */

/* CODE BLOCK STYLE START */
figure[data-rehype-pretty-code-figure] {
  @apply my-6 overflow-hidden rounded-md border;
}

figure[data-rehype-pretty-code-figure] pre {
  @apply overflow-x-auto py-2 text-[14px] leading-relaxed;
  background-color: transparent !important;
  border-width: 0 !important;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

figure[data-rehype-pretty-code-figure] code {
  @apply grid w-full;
  counter-reset: line;
  box-decoration-break: clone;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-family: var(--font-mono);
  font-size: 0.875rem;
  line-height: 1.6;
}

figure[data-rehype-pretty-code-figure] code [data-line] {
  @apply border-l-2 border-l-transparent px-4;
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

/* Responsive adjustments for smaller screens */
@media (max-width: 640px) {
  figure[data-rehype-pretty-code-figure] pre {
    font-size: 13px; /* Slightly smaller on mobile */
  }

  figure[data-rehype-pretty-code-figure] code {
    font-size: 0.8125rem; /* 13px on mobile */
  }

  figure[data-rehype-pretty-code-figure] code [data-line] {
    @apply px-3; /* Slightly less horizontal padding on mobile */
  }

  /* Smaller line numbers on mobile */
  figure[data-rehype-pretty-code-figure]
    code[data-line-numbers]
    > [data-line]::before {
    font-size: 0.75rem;
    width: 0.875rem;
    margin-right: 1rem;
  }
}

/* Fix code text colors in dark mode */
.dark figure[data-rehype-pretty-code-figure] code [data-line] span {
  color: var(--shiki-dark, currentColor) !important;
}

/* Fix code text colors in light mode */
.light figure[data-rehype-pretty-code-figure] code [data-line] span {
  color: var(--shiki-light, currentColor) !important;
}

/* Line highlighting */
figure[data-rehype-pretty-code-figure] code .line--highlighted {
  @apply w-full rounded-none border-l-2;
  background-color: hsl(var(--muted));
}

/* Line numbers for code blocks */
figure[data-rehype-pretty-code-figure] code[data-line-numbers] {
  counter-reset: line;
}

figure[data-rehype-pretty-code-figure]
  code[data-line-numbers]
  > [data-line]::before {
  counter-increment: line;
  content: counter(line);
  display: inline-block;
  width: 1rem;
  margin-right: 1.5rem;
  text-align: right;
  color: hsl(var(--muted-foreground));
  font-size: 0.8rem;
}

.dark
  figure[data-rehype-pretty-code-figure]
  code[data-line-numbers]
  > [data-line]::before {
  color: hsl(var(--muted-foreground));
}

/* Character highlighting styles */
figure[data-rehype-pretty-code-figure] code .word--highlighted {
  @apply rounded px-1 py-0.5;
  background-color: hsla(var(--primary), 0.15);
  box-shadow: 0 0 0 1px hsla(var(--primary), 0.2);
  font-weight: 500;
}

.dark figure[data-rehype-pretty-code-figure] code .word--highlighted {
  background-color: hsla(var(--primary), 0.3);
  box-shadow: 0 0 0 1px hsla(var(--primary), 0.4);
  font-weight: 500;
}

/* Filename display at the top of code blocks */
[data-rehype-pretty-code-title] {
  @apply border-border bg-muted rounded-t-md border-b px-4 py-2 font-mono text-sm;
}

/* Make code scrollable on small screens */
figure[data-rehype-pretty-code-figure] pre {
  -ms-overflow-style: none; /* Hide scrollbar for IE and Edge */
  scrollbar-width: thin; /* Firefox */
}

/* Custom scrollbar for webkit browsers */
figure[data-rehype-pretty-code-figure] pre::-webkit-scrollbar {
  height: 6px;
}

figure[data-rehype-pretty-code-figure] pre::-webkit-scrollbar-track {
  @apply bg-transparent;
}

figure[data-rehype-pretty-code-figure] pre::-webkit-scrollbar-thumb {
  @apply bg-border dark:bg-muted rounded-full;
}
/* CODE BLOCK STYLE END */

/* MERMAID STYLE START */
svg p {
  font-size: unset !important;
  line-height: normal !important;
}

[id^="mermaid-"] {
  background: transparent;
}

[id^="mermaid-"] text {
  fill: hsl(var(--foreground)) !important;
}

[id^="mermaid-"] .actor,
[id^="mermaid-"] rect,
[id^="mermaid-"] polygon,
[id^="mermaid-"] circle,
[id^="mermaid-"] ellipse {
  stroke: hsl(var(--foreground)) !important;
  fill: hsl(var(--background)) !important;
  border-radius: 0.375rem;
}

[id^="mermaid-"] .labelBox,
[id^="mermaid-"] .loopLine,
[id^="mermaid-"] .flowchart-link,
[id^="mermaid-"] line,
[id^="mermaid-"] path {
  stroke: hsl(var(--foreground)) !important;
}

[id^="mermaid-"] .marker,
.mermaid-diagram .marker {
  fill: hsl(var(--foreground)) !important;
}

[id^="mermaid-"] .flowchart-label {
  color: hsl(var(--foreground)) !important;
  fill: hsl(var(--foreground)) !important;
}

/* Additional selectors for more diagram types */
[id^="mermaid-"] .arrowheadPath,
[id^="mermaid-"] .edgePath .path {
  stroke: hsl(var(--foreground)) !important;
  fill: hsl(var(--foreground)) !important;
}

/* For gantt charts */
[id^="mermaid-"] .taskText,
[id^="mermaid-"] .taskTextOutsideRight {
  fill: hsl(var(--foreground)) !important;
}

/* For sequence diagrams */
[id^="mermaid-"] .note {
  fill: hsl(var(--muted)) !important;
  stroke: hsl(var(--foreground)) !important;
}

[id^="mermaid-"] .noteText {
  fill: hsl(var(--foreground)) !important;
}

/* Style edge labels in Mermaid diagrams */
[id^="mermaid-"] .edgeLabel {
  color: hsl(var(--foreground)) !important;
  background-color: transparent !important;
  font-weight: normal;
}

[id^="mermaid-"] .edgeLabel p {
  color: hsl(var(--foreground)) !important;
  background-color: transparent !important;
  font-weight: normal;
}

[id^="mermaid-"] .edgeLabel .label foreignObject {
  overflow: visible;
}

/* Fix line breaks in edge labels */
[id^="mermaid-"] .edgeLabel .label div,
[id^="mermaid-"] .messageText {
  color: hsl(var(--foreground)) !important;
  line-height: 1.2 !important;
  font-size: 14px !important;
  text-align: center;
  background-color: transparent !important;
}

/* Additional styling for sequence diagram messages */
[id^="mermaid-"] .messageLine0,
[id^="mermaid-"] .messageLine1 {
  stroke: hsl(var(--foreground)) !important;
}

/* Make sure notes and other text elements are properly styled */
[id^="mermaid-"] .noteText,
[id^="mermaid-"] text.actor,
[id^="mermaid-"] .loopText {
  fill: hsl(var(--foreground)) !important;
}

/* Ensure all text spans are visible */
[id^="mermaid-"] tspan {
  fill: hsl(var(--foreground)) !important;
}

/* MERMAID STYLE END */

.img-blur {
  filter: blur(0.375rem);
}

.img-unblur {
  animation: img-unblur 0.8s linear;
}

@keyframes img-unblur {
  from {
    filter: blur(12px);
  }

  to {
    filter: blur(0);
  }
}
